/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.68
 * Generated at: 2023-05-12 07:25:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class Billing_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


                double totalCost = 0;
            
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"bootstrap.min.css\">\r\n");
      out.write("    <title>Product Cost Calculation</title>\r\n");
      out.write("    \r\n");
      out.write("        <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            margin: 20px;\r\n");
      out.write("            background-color: #eef6f9;\r\n");
      out.write("            animation: fadeIn 0.5s ease-in;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes fadeIn {\r\n");
      out.write("            from {\r\n");
      out.write("                opacity: 0;\r\n");
      out.write("            }\r\n");
      out.write("            to {\r\n");
      out.write("                opacity: 1;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        h3{\r\n");
      out.write("            color: #333;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            animation: slideDown 0.5s ease-in-out;   \r\n");
      out.write("        }       \r\n");
      out.write("        h1 {\r\n");
      out.write("            font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            color: #5a21dd;\r\n");
      out.write("            text-shadow: 2px 2px 4px #cff1fd;\r\n");
      out.write("            animation: shadowPop 0.5s ease-in-out;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes shadowPop {\r\n");
      out.write("            0% {\r\n");
      out.write("                text-shadow: none;\r\n");
      out.write("            }\r\n");
      out.write("            50% {\r\n");
      out.write("                text-shadow: 2px 2px 4px #41a1c0;\r\n");
      out.write("            }\r\n");
      out.write("            100% {\r\n");
      out.write("                text-shadow: none;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h2 {\r\n");
      out.write("            color: #333;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            animation: slideDown 0.5s ease-in-out;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes slideDown {\r\n");
      out.write("            0% {\r\n");
      out.write("                transform: translateY(-50px);\r\n");
      out.write("            }\r\n");
      out.write("            100% {\r\n");
      out.write("                transform: translateY(0);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table {\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            animation: fadeIn 0.5s ease-in;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th, td {\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            padding: 12px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th {\r\n");
      out.write("            background-color: #f2f2f2;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .total {\r\n");
      out.write("            background-color: #f2f2f2;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .print-button {\r\n");
      out.write("            display: block;\r\n");
      out.write("            width: 120px;\r\n");
      out.write("            margin: 20px auto;\r\n");
      out.write("            padding: 12px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            background-color: #41a1c0;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            transition: background-color 0.3s;\r\n");
      out.write("            animation: fadeIn 0.5s ease-in;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .print-button:hover {\r\n");
      out.write("            background-color: #68b5cd;\r\n");
      out.write("        }\r\n");
      out.write("		 .home-button {\r\n");
      out.write("            display: block;\r\n");
      out.write("            width: 120px;\r\n");
      out.write("            margin: 20px auto;\r\n");
      out.write("            padding: 12px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            background-color: #41a1c0;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            transition: background-color 0.3s;\r\n");
      out.write("            animation: fadeIn 0.5s ease-in;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .home-button:hover {\r\n");
      out.write("            background-color: #68b5cd;\r\n");
      out.write("        }\r\n");
      out.write("        ul {\r\n");
      out.write("            font-style: italic;\r\n");
      out.write("            list-style: none;\r\n");
      out.write("            padding-left: 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        ul li {\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("            animation: fadeIn 0.5s ease-in;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        ul li:before {\r\n");
      out.write("            content: \"â¹\";\r\n");
      out.write("            margin-right: 8px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        ul li p {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("        }\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

    if(session.getAttribute("user") != null){
        String snm = session.getAttribute("snm").toString();
        String usnm = session.getAttribute("user").toString();
        System.out.println(usnm);

        
      out.write("\r\n");
      out.write("        ");
 out.println("<h1>" + snm + "</h1>");
        String cusnm = request.getParameter("customer_name");
        String cusadd = request.getParameter("customer_address");
        String cusemail = request.getParameter("customer_email");
        String cusnum = request.getParameter("customer_number");
        
      out.write("\r\n");
      out.write("        <h3>Customer details</h3>\r\n");
      out.write("        <ul>\r\n");
      out.write("            ");
 out.println("<p>Customer Name: " + cusnm + "</p>"); 
      out.write("\r\n");
      out.write("            ");
 out.println("<p>Customer Address: " + cusadd + "</p>"); 
      out.write("\r\n");
      out.write("            ");
 out.println("<p>Customer Number: " + cusnum + "</p>"); 
      out.write("\r\n");
      out.write("            ");
 out.println("<p>Customer Email: " + cusemail + "</p>"); 
      out.write("\r\n");
      out.write("        </ul>\r\n");
      out.write("\r\n");
      out.write("        <h2>Product Cost Calculation</h2>\r\n");
      out.write("\r\n");
      out.write("        <table>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>Product Name</th>\r\n");
      out.write("                <th>Price</th>\r\n");
      out.write("                <th>Quantity</th>\r\n");
      out.write("                <th>Cost</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            ");

            // Database connection details
    String url = "jdbc:mysql://u95bkzftvx8tpees:XQG18W1E6DvpJgMSS77Y@bpgcz0m5wxumvwiokehb-mysql.services.clever-cloud.com:3306/bpgcz0m5wxumvwiokehb";
//            String username = "your_username";
  //          String password = "your_password";

            // Get the tax percentage from the user
            double taxPercentage = Double.parseDouble(request.getParameter("tax"));

            // Get the product IDs and quantities from the user
            String[] productIds = request.getParameterValues("product_id");
            String[] quantities = request.getParameterValues("quantity");

            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection(url);

                for (int i = 0; i < productIds.length; i++) {
                    String productId = productIds[i];
                    int quantity = Integer.parseInt(quantities[i]);

                    // Fetch the product details from the database
                    String query = "SELECT proname, selling_Price FROM products WHERE proid = ?";
                    PreparedStatement pstmt = conn.prepareStatement(query);
                    pstmt.setString(1, productId);
                    ResultSet rs = pstmt.executeQuery();

                    if (rs.next()) {
                        String productName = rs.getString("proname");
                        double productPrice = rs.getDouble("selling_Price");

                        // Calculate the cost for this product based on quantity
                        double productCost = productPrice * quantity;
                        totalCost += productCost;

                        // Display individual product details
                        out.println("<tr>");
                        out.println("<td>" + productName + "</td>");
                        out.println("<td>" + productPrice + "</td>");
                        out.println("<td>" + quantity + "</td>");
                        out.println("<td>" + productCost + "</td>");
                        out.println("</tr>");
                    }

                    rs.close();
                    pstmt.close();
                }

                // Save the bill details to the database
                String insertQuery = "INSERT INTO bills (customer_name, customer_address, customer_email, customer_number, total_cost, tax_percentage, final_cost) VALUES (?, ?, ?, ?, ?, ?, ?)";
                PreparedStatement insertStmt = conn.prepareStatement(insertQuery);
                insertStmt.setString(1, cusnm);
                insertStmt.setString(2, cusadd);
                insertStmt.setString(3, cusemail);
                insertStmt.setString(4, cusnum);
                insertStmt.setDouble(5, totalCost);
                insertStmt.setDouble(6, taxPercentage);
                insertStmt.setDouble(7, totalCost + (totalCost * (taxPercentage / 100)));
                insertStmt.executeUpdate();

                insertStmt.close();
                conn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
            
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            <tr class=\"total\">\r\n");
      out.write("                <td colspan=\"3\">Total Cost:</td>\r\n");
      out.write("                <td>");
      out.print( totalCost );
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr class=\"total\">\r\n");
      out.write("                <td colspan=\"3\">Tax (");
      out.print( taxPercentage );
      out.write("%):</td>\r\n");
      out.write("                <td>");
      out.print( totalCost * (taxPercentage / 100) );
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr class=\"total\">\r\n");
      out.write("                <td colspan=\"3\">Final Cost:</td>\r\n");
      out.write("                <td>");
      out.print( totalCost + (totalCost * (taxPercentage / 100)) );
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </table>\r\n");
      out.write("        <button class=\"print-button\" onclick=\"window.print()\">Print</button>\r\n");
      out.write("        <button class=\"home-button\"><a href=\"admin.jsp\">Home page</button>\r\n");
      out.write("        ");

    } else {
        
      out.write("\r\n");
      out.write("        <h2>Invalid session...</h2>\r\n");
      out.write("        <hr>\r\n");
      out.write("        <p>You are not authorized to see this information.</p>\r\n");
      out.write("        <a href=\"login.html\">Login</a>\r\n");
      out.write("        ");

    }

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

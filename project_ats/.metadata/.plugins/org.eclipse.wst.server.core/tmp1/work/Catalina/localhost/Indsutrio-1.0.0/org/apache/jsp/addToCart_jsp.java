/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.68
 * Generated at: 2023-05-12 06:38:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class addToCart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"D:\\Projects-1010\\Indsutrio-1.0.0\\src\\main\\webapp\\css\\bootstrap.min.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        label {\r\n");
      out.write("            display: block;\r\n");
      out.write("            margin-bottom: 5px;\r\n");
      out.write("        }\r\n");
      out.write("        input[type=\"submit\"]{\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            border: 1px solid #609ab9;\r\n");
      out.write("            background-color: #60b96f;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        select, input[type=\"number\"], input[type=\"text\"], input[type=\"email\"] {\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        form {\r\n");
      out.write("            width: 300px;\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("            animation: fadeIn 1s ease-in-out;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes fadeIn {\r\n");
      out.write("            0% {\r\n");
      out.write("                opacity: 0;\r\n");
      out.write("                transform: translateY(-20px);\r\n");
      out.write("            }\r\n");
      out.write("            100% {\r\n");
      out.write("                opacity: 1;\r\n");
      out.write("                transform: translateY(0);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    <style>\r\n");
      out.write("        /* Responsive Styles */\r\n");
      out.write("\r\n");
      out.write("        @media only screen and (max-width: 600px) {\r\n");
      out.write("            form {\r\n");
      out.write("                width: 90%;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @media only screen and (min-width: 601px) and (max-width: 1024px) {\r\n");
      out.write("            form {\r\n");
      out.write("                width: 60%;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @media only screen and (min-width: 1025px) {\r\n");
      out.write("            form {\r\n");
      out.write("                width: 40%;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

if(session.getAttribute("user") != null){
    String snm = session.getAttribute("snm").toString();
    String usnm = session.getAttribute("user").toString();
    System.out.println(usnm);

      out.write("\r\n");
      out.write("    <form action=\"Billing.jsp\" method=\"post\">\r\n");
      out.write("        <label>Product 1</label>\r\n");
      out.write("        <select name=\"product_id\">\r\n");
      out.write("            <!-- Populate the dropdown with product IDs from the database -->\r\n");
      out.write("            ");
 
                String url = "jdbc:mysql://u95bkzftvx8tpees:XQG18W1E6DvpJgMSS77Y@bpgcz0m5wxumvwiokehb-mysql.services.clever-cloud.com:3306/bpgcz0m5wxumvwiokehb";
            try {
                Class.forName("com.mysql.jdbc.Driver");

                Connection conn = DriverManager.getConnection(url);
                PreparedStatement pst;
                pst= conn.prepareStatement("SELECT proid, proname FROM products where user_name=?");
                pst.setString(1, usnm);
                ResultSet rs = pst.executeQuery();
                while (rs.next()) {
                    String productId = rs.getString("proid");
                    String productName = rs.getString("proname");
                    out.println("<option value='" + productId + "'>" + productName + "</option>");
                }

                rs.close();
                pst.close();
                conn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
            
      out.write("\r\n");
      out.write("        </select>\r\n");
      out.write("        <input type=\"number\" name=\"quantity\" min=\"1\" value=\"1\">\r\n");
      out.write("\r\n");
      out.write("        <label>Product 2</label>\r\n");
      out.write("        <select name=\"product_id\">\r\n");
      out.write("            <!-- Populate the dropdown with product IDs from the database -->\r\n");
      out.write("            ");
 
            
            try {
                // String url = "jdbc:mysql://u95bkzftvx8tpees:XQG18W1E6DvpJgMSS77Y@bpgcz0m5wxumvwiokehb-mysql.services.clever-cloud.com:3306/bpgcz0m5wxumvwiokehb";
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection(url);
               // Statement stmt = conn.createStatement();
                PreparedStatement pst;
                pst= conn.prepareStatement("SELECT proid, proname FROM products where user_name=?");
                pst.setString(1, usnm);
                ResultSet rs = pst.executeQuery();
                while (rs.next()) {
                    String productId = rs.getString("proid");
                    String productName = rs.getString("proname");
                    out.println("<option value='" + productId + "'>" + productName + "</option>");
                }

                rs.close();
                pst.close();
                conn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
            
      out.write("\r\n");
      out.write("        </select>\r\n");
      out.write("        <input type=\"number\" name=\"quantity\" min=\"1\" value=\"1\">\r\n");
      out.write("\r\n");
      out.write("        <!-- Add more product sections as needed -->\r\n");
      out.write("\r\n");
      out.write("        <label>Tax Percentage (%)</label>\r\n");
      out.write("        <input type=\"number\" name=\"tax\" min=\"0\" step=\"0.01\" value=\"0\" required>\r\n");
      out.write("        <h2>Customer Details</h2>\r\n");
      out.write("        <label>Name</label>\r\n");
      out.write("        <input type=\"text\" name=\"customer_name\" required>\r\n");
      out.write("\r\n");
      out.write("        <label>Address</label>\r\n");
      out.write("        <input type=\"text\" name=\"customer_address\" required>\r\n");
      out.write("\r\n");
      out.write("        <label>Email</label>\r\n");
      out.write("        <input type=\"email\" name=\"customer_email\" required>\r\n");
      out.write("\r\n");
      out.write("        <label>Number</label>\r\n");
      out.write("        <input type=\"text\" name=\"customer_number\" required>\r\n");
      out.write("\r\n");
      out.write("        <input type=\"submit\" value=\"Generate Bill\" >\r\n");
      out.write("    </form>\r\n");
      out.write("      ");

    } else {
        
      out.write("\r\n");
      out.write("        <h2>Invalid session...</h2>\r\n");
      out.write("        <hr>\r\n");
      out.write("        <p>You are not authorized to see this information.</p>\r\n");
      out.write("        <a href=\"login.html\">Login</a>\r\n");
      out.write("        ");

    }

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
